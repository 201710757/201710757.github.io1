<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jihoon Kim</title>
    <description>Artificial Intelligence  Reinforcement Learning
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 01 Sep 2021 23:47:31 +0900</pubDate>
    <lastBuildDate>Wed, 01 Sep 2021 23:47:31 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>[paper] C51 review</title>
        <description>&lt;p&gt;&lt;strong&gt;C51&lt;/strong&gt; - Categorical RL (Distributional RL) [&lt;a href=&quot;https://arxiv.org/abs/1707.06887&quot;&gt;C51&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Distributional RL&lt;/strong&gt; 에선 기존 Bellman Equation 의 Q-value를 사용하던 것 대신, &lt;br /&gt;
distribution 기반인 &lt;strong&gt;Distributional Bellman Equation&lt;/strong&gt;을 사용한다.&lt;/p&gt;

&lt;p&gt;식은 다음과 같다&lt;br /&gt;
\(Z(x, a)\overset{\underset{\mathrm{def}}{}}{=} \!\, R(x, a) + γZ(X', A')\)&lt;/p&gt;

&lt;p&gt;우리가 익히 알고 있던 \(Q(x, a) {=} R(x, a) + γQ(X', A')\) 과 비교해보면 단순 \(\overset{}{Q}\)가 \(\overset{}Z\)로 바뀐것밖에 없다.&lt;br /&gt;
하지만 여기에 큰 의미가 있는데,&lt;br /&gt;
\(Q(x_t, a)\overset{}{:=} \!\, \sum_{i}^{N}z_ip_i(x_t, a)\)&lt;/p&gt;

&lt;p&gt;위 식을 통해 &lt;strong&gt;Z distribution&lt;/strong&gt;의 &lt;strong&gt;기대값&lt;/strong&gt;을 구하여   기존 Q-value와 같이, &lt;strong&gt;action 마다 하나의 scalar값&lt;/strong&gt;(Q-value)을 구하지만&lt;br /&gt;
Distribution을 통해 &lt;strong&gt;정확한 분포를 추정&lt;/strong&gt;하고 그에 따른 Q-value 를 구할 수 있기 때문에 &lt;strong&gt;정확도&lt;/strong&gt;가 더 높습니다.&lt;/p&gt;

&lt;p&gt;Distributional RL은 &lt;strong&gt;action마다 Distribution&lt;/strong&gt;을 갖고 있는데,&lt;br /&gt;
&lt;img src=&quot;/assets/rl_paper/value_distribution.png&quot; alt=&quot;value_distribution&quot; width=&quot;400&amp;quot;, height=&amp;quot;100&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;가로축&lt;/strong&gt;은 분포를 결정하기 위한 하이퍼파라미터로써 &lt;strong&gt;support&lt;/strong&gt;라 불리며, &lt;br /&gt;
이 논문에선 51로 하였을 때 결과가 가장 좋았기 때문에 논문 이름도 C51이 되었습니다.&lt;br /&gt;
distribution의 &lt;strong&gt;높이&lt;/strong&gt;는 각 support의 &lt;strong&gt;확률&lt;/strong&gt;을 뜻합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/rl_paper/projection_sub.png&quot; alt=&quot;value_distribution&quot; width=&quot;400&amp;quot;, height=&amp;quot;100&quot; /&gt;&lt;br /&gt;
또한 이 &lt;strong&gt;support의 최대, 최소값&lt;/strong&gt;을 지정해주게 되는데 이 MIN/MAX가 위 그림의 우하단과 같이, 추후 나올 projection에서도 사용됩니다.&lt;/p&gt;

&lt;p&gt;다음으로, action마다 distribution이 존재하기 때문에 &lt;strong&gt;모델의 아웃풋은 action 수 * support 수&lt;/strong&gt; 입니다.&lt;br /&gt;
결론적으로 이 agent는 각 action의 각 support에 해당하는 &lt;strong&gt;확률을 학습&lt;/strong&gt;하게 됩니다.&lt;/p&gt;

&lt;p&gt;이 support에 대한 확률을 어떻게 학습할 것인가가 중요한 문제인데 &lt;br /&gt;
논문에서는 &lt;strong&gt;Wasserstein metric&lt;/strong&gt;을 사용하려 했지만 그 당시 &lt;strong&gt;수렴성&lt;/strong&gt;을 증명하지 못하였습니다.&lt;/p&gt;

&lt;p&gt;따라서 C51논문에선 다음과 같은 &lt;strong&gt;Cross Entropy를 통해 Loss&lt;/strong&gt;를 구하게 됩니다.&lt;br /&gt;
\(Loss\overset{}{=}-\sum_{i}^{} m_i\log p_i(x_t, a_t)\)&lt;br /&gt;
추후 발표되는 QR-DQN 에서 Wasserstein metric의 수렴성을 증명하게 됩니다.&lt;/p&gt;

&lt;p&gt;학습을 시키기 위해 &lt;strong&gt;Target Distribution&lt;/strong&gt;이 필요한데 이논문에서 핵심인 부분이 바로 이부분 입니다.&lt;/p&gt;

&lt;p&gt;논문 수식을 차례로 불러오면, &lt;br /&gt;
\(\hat{T}z_j ← [r_t + γ_tz_j]^{V_{MAX}}_{V_{MIN}}\)&lt;br /&gt;
우선 오른쪽의 \(\overset{}r_t\)는 리워드, \(γ_t\)는 gamma, \(\overset{}{V_{MAX}}\)과 \(\overset{}{V_{MIN}}\)는 바로 알 수 있듯 support의 최대, 최소값입니다.&lt;br /&gt;
위 식은 기존 DQN에서 target network 구할때와 비슷해보입니다.&lt;/p&gt;

&lt;p&gt;실제로도 다 똑같지만 \(\overset{}{V_{MAX}}\)과 \(\overset{}{V_{MIN}}\)으로 인해 support가 최대값보다 크다면 \(\overset{}{V_{MAX}}\)로 맞춰주고,&lt;br /&gt;
support가 최소값보다 작다면 \(\overset{}{V_{MIN}}\)로 맞춰주게 됩니다.&lt;/p&gt;

&lt;p&gt;\({γ_t}{z_j}\)
를 통해 shirink(보라)되고, \(\overset{}r_t\)를 더함(초록)으로써 &lt;strong&gt;강제&lt;/strong&gt;로 맞춰주려하면&lt;br /&gt;
아래 그림과 같이 &lt;strong&gt;support의 범위&lt;/strong&gt;가 맞지 않게 됩니다. &lt;br /&gt;
&lt;img src=&quot;/assets/rl_paper/support_notEqual.png&quot; alt=&quot;value_distribution&quot; width=&quot;400&amp;quot;, height=&amp;quot;100&quot; /&gt;&lt;br /&gt;
이렇게 되면 &lt;strong&gt;같은 Domain&lt;/strong&gt;에 대해 Cross Entropy Loss를 구해야 하는데 그렇지 않기 때문에 &lt;strong&gt;Projection&lt;/strong&gt;이란 과정을 추가합니다.&lt;/p&gt;

&lt;p&gt;Projection이란 실제 Support가 [1,2,3,4,5]와 같고, Target Distribution의 support가 [1.3, 2.3, 3.5, 4.7, 4.9]이 되었을 때,&lt;br /&gt;
target Distribution의 support가 1.3인 support의 확률값을 main network의 support 1과 2에 해당하는 곳에 각각 &lt;strong&gt;분배&lt;/strong&gt;하게 됩니다.&lt;br /&gt;
나누는 기준은 1.3은 1에 가깝기 때문에 더 많이 배분되고 2에는 멀기 때문에 더 적게 배분됩니다.&lt;/p&gt;

&lt;p&gt;해당하는 sudo 코드는 다음과 같습니다. &lt;br /&gt;
\(l ← \lfloor{b_j}\rfloor,   u ← \lceil{b_j}\rceil\)&lt;br /&gt;
위 수식을 통해 해당 target distribution의 support의 low point와 upper point를 구합니다.&lt;br /&gt;
예를들면 \(\overset{}b_j\)가 3.1일 때, \(\overset{}l\)은 3이 되고 \(\overset{}u\)는 4가 됩니다. 이를 통해 projection의 핵심기능인 쪼개주기가 가능합니다.&lt;/p&gt;

&lt;p&gt;\(m_l ← m_l + p_j (x_{t+1}, a^∗)(u − b_j)\)&lt;br /&gt;
\(m_u ← m_u + p_j (x_{t+1}, a^∗)(b_j − l)\)&lt;br /&gt;
위 수식을 통해 main support의 거리에 맞게 target support의 값을 &lt;strong&gt;알맞는 비율로 쪼개서 나누어&lt;/strong&gt;주게 됩니다.&lt;/p&gt;

&lt;p&gt;결국 다음 그림과 같아집니다.&lt;br /&gt;
&lt;img src=&quot;/assets/rl_paper/projection_fin.png&quot; alt=&quot;value_distribution&quot; width=&quot;400&amp;quot;, height=&amp;quot;100&quot; /&gt;&lt;br /&gt;
support도 맞춰주었기 때문에 같은 Domain에서 Loss를 구할 수 있게 되었습니다.&lt;/p&gt;

&lt;p&gt;최종적으로 target network의 모든 Support에 대하여 projection까지 마친 뒤 Cross Entropy Loss를 구하여 Update가 가능합니다.&lt;/p&gt;

&lt;p&gt;감사합니다&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Sep 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/paper/2021/09/01/20-43-25/</link>
        <guid isPermaLink="true">http://localhost:4000/paper/2021/09/01/20-43-25/</guid>
        
        <category>paper_rl</category>
        
        
        <category>paper</category>
        
      </item>
    
      <item>
        <title>[devs] github ssh 접속</title>
        <description>&lt;p&gt;&lt;strong&gt;깃허브에서 clone&lt;/strong&gt;을 할 때 https 뿐만 아니라 &lt;strong&gt;ssh&lt;/strong&gt;를 통해 가능한 경우도 있습니다.&lt;br /&gt;
https는 요즘 8월 에러가 뜨길래 귀찮기도 하고 &lt;strong&gt;ssh&lt;/strong&gt;가 편하기도 해서 포스트 해보았습니다!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;먼저 터미널을 연 뒤,&lt;/p&gt;

&lt;p&gt;ssh-keygen -t ed25519 -C “githubEmail@email.com”&lt;br /&gt;
또는 &lt;br /&gt;
ssh-keygen -t rsa -b 4096 -C “githubEmail@email.com”&lt;/p&gt;

&lt;p&gt;를 입력후 정상적으로 동작하면, .ssh폴더에 들어가 id.pub 파일의 내용을 복사합니다&lt;br /&gt;
-&amp;gt; &lt;strong&gt;[Windows]&lt;/strong&gt; clip &amp;lt; id.pub &lt;br /&gt;
-&amp;gt; &lt;strong&gt;[MAC]&lt;/strong&gt; pbcopy &amp;lt; id.pub&lt;/p&gt;

&lt;p&gt;다음으로 깃허브 홈페이지에 들어가 오른쪽 상단의 프로필 클릭후, 세팅에 들어간 뒤 왼쪽메뉴에 ssh and gpg keys 를 들어가면 &lt;br /&gt;
오른쪽 위에 New SSH key버튼이 있습니다.&lt;/p&gt;

&lt;p&gt;눌러 들어간 뒤, 타이틀은 원하는대로 작성하시고 key 부분에 붙여넣기 해주시면 등록은 끝입니다.&lt;/p&gt;

&lt;p&gt;접속설정을 추가로 해주어야 하는데 우선 같은 .ssh 폴더 안에 config파일을 열어준 뒤&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Host github.com&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;IdentityFile 경로/.ssh/id.pub&lt;br /&gt;
User git&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;를 맨 밑에 추가해주시면 정상적으로 클론해올 수 있습니다!&lt;/p&gt;

&lt;p&gt;감사합니다!&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devs/2021/08/24/01-27-24/</link>
        <guid isPermaLink="true">http://localhost:4000/devs/2021/08/24/01-27-24/</guid>
        
        <category>devs_else</category>
        
        
        <category>devs</category>
        
      </item>
    
      <item>
        <title>[devs] Logstash 위경도 좌표변환 for Kibana Map</title>
        <description>&lt;p&gt;보통 우리가 가지고 있는 &lt;strong&gt;String형 위경도 좌표&lt;/strong&gt;를 키바나 맵에 뿌리기 위해선 바로 사용가능 한것이 아니라&lt;br /&gt;
&lt;strong&gt;geo-point type&lt;/strong&gt;으로 바꿔줘야 kibana map이 읽어올 수 있는데 이 과정을 한번 정리해보겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;우선 현재 text타입인 위경도 좌표를 알맞게 변환해 넣을 공간인 &lt;strong&gt;geo-point&lt;/strong&gt;를 dev tools 에서 다음과 같은 코드를 통해 만들어주어야 합니다.&lt;br /&gt;
&lt;img src=&quot;/assets/elastic_geopoint_devtools.jpg&quot; alt=&quot;elastic_geopoint_devtools&quot; width=&quot;300&amp;quot;, height=&amp;quot;220&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다음으로, 위 과정에서 만든 인덱스에 데이터를 넣기위해 로그스태시에서 사용할 conf file을 확인해보겠습니다.
&lt;br /&gt;
&lt;img src=&quot;/assets/logstash_conf.jpg&quot; alt=&quot;logstash_conf&quot; width=&quot;600&amp;quot;, height=&amp;quot;1200&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
사실 중요한건 아래 코드입니다.&lt;/p&gt;
&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important;overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0;padding:0;border:none;background-color:#fafafa;border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px;border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0;padding:0;word-break:normal;text-align:right;color:#666;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0;text-align:left&quot;&gt;&lt;div style=&quot;margin:0;padding:0;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;mutate&amp;nbsp;{&amp;nbsp;convert&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;{&lt;span style=&quot;color:#63a35c&quot;&gt;'lat'&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'float'&lt;/span&gt;}&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;mutate&amp;nbsp;{&amp;nbsp;convert&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;{&lt;span style=&quot;color:#63a35c&quot;&gt;'lon'&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'float'&lt;/span&gt;}&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;mutate&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add_field&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;{&lt;span style=&quot;color:#63a35c&quot;&gt;'[location-geo][lat]'&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'%{lat}'&lt;/span&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add_field&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;{&lt;span style=&quot;color:#63a35c&quot;&gt;'[location-geo][lon]'&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'%{lon}'&lt;/span&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right;margin-top:-13px;margin-right:5px;font-size:9px;font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color:#e5e5e5text-decoration:none&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom;padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;text-decoration:none;color:white&quot;&gt;&lt;span style=&quot;font-size:9px;word-break:normal;background-color:#e5e5e5;color:white;border-radius:10px;padding:1px&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;원본소스의 중반부분을 가져왔습니다.&lt;br /&gt;
확인해보면 1번, 2번 라인은 기존 text(String)형이었던 lat과 lon을 geo-point type이 읽을 수 있는 float형으로 변환해주고 있습니다.&lt;br /&gt;
다음으로 3번부터 6번 라인은 앞서 컬럼을 만들어두었던 곳에 대입하는 코드입니다.&lt;br /&gt;
이로써 미리 만들어 두었던 location-geo 컬럼의 geo-point type에 lat 과 lon이 대입됩니다.&lt;br /&gt;
이를통해 기존 텍스트 값이던 위경도 좌표를 키바나 맵에서 읽고 뿌릴 수 있게 되었습니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/kibana_map.jpg&quot; alt=&quot;kibanamap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결과적으로 위 사진과 같이 잘 나오는 것을 확인할 수 있습니다!&lt;/p&gt;

&lt;p&gt;감사합니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devs/2021/08/19/01-25-44/</link>
        <guid isPermaLink="true">http://localhost:4000/devs/2021/08/19/01-25-44/</guid>
        
        <category>devs_else</category>
        
        
        <category>devs</category>
        
      </item>
    
      <item>
        <title>[devs] scp 우분투 파일전송</title>
        <description>&lt;p&gt;command를 통해 &lt;strong&gt;우분투로 파일 또는 폴더를 보내고 받기&lt;/strong&gt;를 해봅시다!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;local to remote (보내기)&lt;/strong&gt;&lt;br /&gt;
scp -P 1234 myfile user@192.168.0.10:/home/location&lt;/p&gt;

&lt;p&gt;서버의 주소는 192.168.0.10, 포트는 1234일 때 user란 아이디로 connect하고 /home/location 에 myfile을 보내고싶을때&lt;/p&gt;

&lt;p&gt;(파일 여러개 보내고 싶은경우는 myfile myfile1처럼 이어 붙이기만 하면 됩니다.)&lt;br /&gt;
(폴더를 보내고 싶을 땐 파일명 위치에 -r 옵션과 함께 폴더명을 적으면 됩니다!)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;remote to local (받기)&lt;/strong&gt;&lt;br /&gt;
scp -P 1234 user@192.168.0.10:/home/location/file1 /loc/&lt;/p&gt;

&lt;p&gt;192.168.0.10:1234 의 서버에 user란 아이디로 연결하고, 서버의 /home/location/ 경로에 위치하고 있는 file1파일을 내컴퓨터의 /loc/ 경로에 받아오고 싶을 때&lt;/p&gt;

&lt;p&gt;(보내기와 마찬가지로 여러파일 받아오고 싶을때, 파일경로를 띄어쓰기로 구분하여 모두 입력하고 쌍따옴표(“)로 묶고, 다음위치에 저장하고싶은 경로를 작성하면 됩니다.)&lt;br /&gt;
(폴더를 받고 싶을 때, -r옵션을 user앞에 넣어준뒤 파일명 대신 폴더명을 적으면 됩니다!)&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devs/2021/08/18/01-24-26/</link>
        <guid isPermaLink="true">http://localhost:4000/devs/2021/08/18/01-24-26/</guid>
        
        <category>devs_else</category>
        
        
        <category>devs</category>
        
      </item>
    
      <item>
        <title>[devs] 스크린샷 업무 자동화</title>
        <description>&lt;p&gt;몇년전 공익근무 관련 &lt;strong&gt;업무자동화&lt;/strong&gt;로 이슈가 있었던 토픽입니다! &lt;br /&gt;
엄청난 &lt;strong&gt;스크린샷 업무&lt;/strong&gt;를 파이썬 하나를 통해 몇달걸일 일을 단숨에 끝냈다고 하네요. &lt;br /&gt;
마침 스크린샷 후 pdf파일 만들 일이 생겨, 상기 시나리오를 기반으로 구현을 해보려고 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;우선 전체코드는 다음과 같습니다.&lt;/p&gt;

&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important;overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0;padding:0;border:none;background-color:#fafafa;border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px;border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0;padding:0;word-break:normal;text-align:right;color:#666;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0;text-align:left&quot;&gt;&lt;div style=&quot;margin:0;padding:0;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;import&lt;/span&gt;&amp;nbsp;pyautogui&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;page&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;250&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;i&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;range&lt;/span&gt;(page):&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pyautogui.screenshot(&lt;span style=&quot;color:#63a35c&quot;&gt;'filename'&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#066de2&quot;&gt;str&lt;/span&gt;(i)&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#63a35c&quot;&gt;'.png'&lt;/span&gt;,&amp;nbsp;region&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;(&lt;span style=&quot;color:#0099cc&quot;&gt;200&lt;/span&gt;,&lt;span style=&quot;color:#0099cc&quot;&gt;300&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;300&lt;/span&gt;,&lt;span style=&quot;color:#0099cc&quot;&gt;300&lt;/span&gt;))&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;except&lt;/span&gt;:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;pass&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pyautogui.click(&lt;span style=&quot;color:#0099cc&quot;&gt;900&lt;/span&gt;,&lt;span style=&quot;color:#0099cc&quot;&gt;2000&lt;/span&gt;,&amp;nbsp;button&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#63a35c&quot;&gt;'left'&lt;/span&gt;,&amp;nbsp;clicks&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;,&amp;nbsp;interval&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom;padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;text-decoration:none;color:white&quot;&gt;&lt;span style=&quot;font-size:9px;word-break:normal;background-color:#e5e5e5;color:white;border-radius:10px;padding:1px&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important;overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0;padding:0;border:none;background-color:#fafafa;border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px;border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0;padding:0;word-break:normal;text-align:right;color:#666;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0;text-align:left&quot;&gt;&lt;div style=&quot;margin:0;padding:0;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;import&lt;/span&gt;&amp;nbsp;pyautogui&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom;padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;text-decoration:none;color:white&quot;&gt;&lt;span style=&quot;font-size:9px;word-break:normal;background-color:#e5e5e5;color:white;border-radius:10px;padding:1px&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;먼저, 우리가 사용할 라이브러리는 pyautogui 입니다. &lt;br /&gt;
이 라이브러리를 통해 스크린샷과 원하는 위치를 클릭하는 기능을 구현할 것입니다. &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important;overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0;padding:0;border:none;background-color:#fafafa;border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px;border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0;padding:0;word-break:normal;text-align:right;color:#666;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0;text-align:left&quot;&gt;&lt;div style=&quot;margin:0;padding:0;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;page&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;250&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom;padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;text-decoration:none;color:white&quot;&gt;&lt;span style=&quot;font-size:9px;word-break:normal;background-color:#e5e5e5;color:white;border-radius:10px;padding:1px&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;페이지는 원하시는만큼 할당해 주시고,&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important;overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0;padding:0;border:none;background-color:#fafafa;border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px;border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0;padding:0;word-break:normal;text-align:right;color:#666;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0;text-align:left&quot;&gt;&lt;div style=&quot;margin:0;padding:0;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;i&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;range&lt;/span&gt;(page):&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pyautogui.screenshot(&lt;span style=&quot;color:#63a35c&quot;&gt;'filename'&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#066de2&quot;&gt;str&lt;/span&gt;(i)&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#63a35c&quot;&gt;'.png'&lt;/span&gt;,&amp;nbsp;region&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;(&lt;span style=&quot;color:#0099cc&quot;&gt;200&lt;/span&gt;,&lt;span style=&quot;color:#0099cc&quot;&gt;300&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;300&lt;/span&gt;,&lt;span style=&quot;color:#0099cc&quot;&gt;300&lt;/span&gt;))&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;except&lt;/span&gt;:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;pass&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right;margin-top:-13px;margin-right:5px;font-size:9px;font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color:#e5e5e5text-decoration:none&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom;padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;text-decoration:none;color:white&quot;&gt;&lt;span style=&quot;font-size:9px;word-break:normal;background-color:#e5e5e5;color:white;border-radius:10px;padding:1px&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;반복문을 돌며 pyautogui.screenshot 함수를 통해 스크린샷을 찍게 되는데 먼저 저장 파일명이 인자로 들어가고, &lt;br /&gt;
위치를 지정해줘야 하는데 region에 차례로 시작할 x좌표, y좌표, x크기, y크기 가 들어가게 됩니다. &lt;br /&gt;
try 문으로 감싸주는것은 대용량 작업시 뻑날 경우를 대비해서 추가해보았습니다 ㅋㅋ &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important;overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0;padding:0;border:none;background-color:#fafafa;border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px;border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0;padding:0;word-break:normal;text-align:right;color:#666;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0;text-align:left&quot;&gt;&lt;div style=&quot;margin:0;padding:0;color:#010101;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;pyautogui.click(&lt;span style=&quot;color:#0099cc&quot;&gt;900&lt;/span&gt;,&lt;span style=&quot;color:#0099cc&quot;&gt;2000&lt;/span&gt;,&amp;nbsp;button&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#63a35c&quot;&gt;'left'&lt;/span&gt;,&amp;nbsp;clicks&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;,&amp;nbsp;interval&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom;padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;text-decoration:none;color:white&quot;&gt;&lt;span style=&quot;font-size:9px;word-break:normal;background-color:#e5e5e5;color:white;border-radius:10px;padding:1px&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;마지막으로, 클릭해서 페이지를 넘기거나 정보를 수정해야 하기 때문에, pyautogui.click함수를 활용하여 클릭을 하게 됩니다.&lt;/p&gt;

&lt;p&gt;인자를 차례로 보면, 클릭할 x좌표, y좌표, clicks에서 볼 수 있듯 몇번 클릭할지, interval은 클릭 사이 간격을 몇초로 둘것인가를 설정하는 것입니다.  &lt;br /&gt;
이 interval로 인해 따로 sleep함수를 걸어주지 않아도 알아서 중간중간 실행을 기다릴 수 있습니다.&lt;/p&gt;

&lt;p&gt;이로써 구현 완료입니다! 입맛대로 수정해보면서 라이브러리를 익히는 것도 좋겠네요!&lt;/p&gt;

&lt;p&gt;감사합니다~&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Jul 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devs/2021/07/13/01-21-46/</link>
        <guid isPermaLink="true">http://localhost:4000/devs/2021/07/13/01-21-46/</guid>
        
        <category>devs_else</category>
        
        
        <category>devs</category>
        
      </item>
    
      <item>
        <title>[paper] 논문 공부 리스트</title>
        <description>&lt;p&gt;Last Update : 2021-08-18&lt;br /&gt;
&lt;strong&gt;읽고 공부할 논문들&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;GAN&lt;/strong&gt; [&lt;a href=&quot;https://github.com/eriklindernoren/PyTorch-GAN.git&quot;&gt;pytorch-GANs&lt;/a&gt;]&lt;br /&gt;
RL-GAN-Net: A Reinforcement Learning Agent Controlled GAN Network for Real-Time Point Cloud Shape Completion [&lt;a href=&quot;https://arxiv.org/abs/1904.12304&quot;&gt;RL-GAN&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RL&lt;/strong&gt;&lt;br /&gt;
DQN-2013 : Playing Atari with Deep Reinforcement Learning [&lt;a href=&quot;https://arxiv.org/abs/1312.5602&quot;&gt;DQN-2013&lt;/a&gt;]&lt;br /&gt;
DQN-2015 : Human-level control through deep reinforcement learning [&lt;a href=&quot;https://web.stanford.edu/class/psych209/Readings/MnihEtAlHassibis15NatureControlDeepRL.pdf&quot;&gt;DQN-2015&lt;/a&gt;]&lt;br /&gt;
Double-DQN : Deep Reinforcement Learning with Double Q-learning [&lt;a href=&quot;https://arxiv.org/abs/1509.06461&quot;&gt;Double-DQN&lt;/a&gt;]&lt;br /&gt;
Dueling-DQN : Dueling Network Architectures for Deep Reinforcement Learning [&lt;a href=&quot;https://arxiv.org/abs/1511.06581&quot;&gt;Dueling-DQN&lt;/a&gt;]&lt;br /&gt;
C51 : A Distributional Perspective on Reinforcement Learning [&lt;a href=&quot;https://arxiv.org/abs/1707.06887&quot;&gt;C51&lt;/a&gt;]&lt;br /&gt;
QR-DQN : Distributional Reinforcement Learning with Quantile Regression [&lt;a href=&quot;https://arxiv.org/abs/1710.10044&quot;&gt;QR-DQN&lt;/a&gt;]&lt;br /&gt;
IQN : Implicit Quantile Networks for Distributional Reinforcement Learning [&lt;a href=&quot;https://arxiv.org/abs/1806.06923&quot;&gt;IQN&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MARL&lt;/strong&gt;&lt;br /&gt;
COMA : Counterfactual Multi-Agent Policy Gradients [&lt;a href=&quot;https://arxiv.org/abs/1705.08926&quot;&gt;COMA&lt;/a&gt;]&lt;br /&gt;
QMIX : QMIX: Monotonic Value Function Factorisation for Deep Multi-Agent Reinforcement Learning [&lt;a href=&quot;https://arxiv.org/abs/1803.11485&quot;&gt;QMIX&lt;/a&gt;]&lt;br /&gt;
MAAC : Actor-Attention-Critic for Multi-Agent Reinforcement Learning [&lt;a href=&quot;https://arxiv.org/abs/1810.02912&quot;&gt;MAAC&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ETC&lt;/strong&gt;&lt;br /&gt;
Noisy Network : Noisy Networks for Exploration [&lt;a href=&quot;https://arxiv.org/abs/1706.10295&quot;&gt;Noisy-Net&lt;/a&gt;]&lt;/p&gt;

</description>
        <pubDate>Thu, 08 Jul 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/paper/2021/07/08/01-19-01/</link>
        <guid isPermaLink="true">http://localhost:4000/paper/2021/07/08/01-19-01/</guid>
        
        <category>paper_else</category>
        
        
        <category>paper</category>
        
      </item>
    
  </channel>
</rss>
